{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","join","Hero","userInfo","style","padding","spacing","Typography","variant","title","description","Link","href","link","HoldingsTable","holdings","align","Table","size","paddingBottom","TableHead","TableRow","TableCell","TableBody","map","holding","ticker_symbol","includes","num","percentageReturn","institution_value","cost_basis","amountHeld","name","toFixed","SubscribeUpdateForm","useState","setSubmitted","value","setValue","error","setError","Paper","margin","backgroundColor","display","justifyContent","alignItems","TextField","id","lable","onChange","e","placeholder","helperText","Button","onClick","axios","post","then","res","catch","backgroundImage","color","marginLeft","TradesTable","recentTrades","trades","filter","trade","trade_date","slice","split","ticker","quantity","price","CreateYourOwnPage","App","useEffect","fetchPortfolio","setHoldings","setTrades","setUserInfo","get","data","ThemeProvider","className","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc3f5f0.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TextField,\n  Button,\n  Typography,\n  Link,\n  Container,\n  Paper\n} from \"@material-ui/core\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\n// UTILS\nconst toPercentage = (num) => {\n  return `${(num * 100).toFixed(2)}%`;\n};\n\nconst Hero = ({ userInfo }) => {\n  return (\n    <div style={{padding: theme.spacing(12)}}>\n      <Typography variant=\"h2\">{userInfo.title}</Typography>\n      <Typography variant=\"p1\">{userInfo.description}</Typography>\n      <Typography variant=\"d2\">\n        <Link href={userInfo.link}>{userInfo.link}</Link>\n      </Typography>\n      <Typography>\n        Page built using <Link href=\"https://withlaguna.com/\">Laguna</Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst HoldingsTable = ({ holdings }) => {\n  return (\n    <>\n      <Typography align=\"left\" variant=\"h5\">Current holdings</Typography>\n      <Table size=\"small\" style={{paddingBottom: theme.spacing(4)}}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Ticker</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Amount Held (USD)</TableCell>\n            <TableCell>Total percentage return</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {holdings.map((holding) => {\n            if (holding.ticker_symbol.includes(\"CUR:\")) {\n              return <></>;\n            }\n            // Calculate return\n            const percentageReturn =\n              holding.institution_value / holding.cost_basis - 1;\n            const amountHeld = holding.institution_value;\n            return (\n              <TableRow>\n                <TableCell>{holding.ticker_symbol}</TableCell>\n                <TableCell>{holding.name}</TableCell>\n                <TableCell>${amountHeld.toFixed(2)}</TableCell>\n                <TableCell>{toPercentage(percentageReturn)}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst SubscribeUpdateForm = ({ userInfo }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (e) => {\n    setError(false);\n    setSubmitted(true);\n    axios\n      .post(\"\")\n      .then((res) => {})\n      .catch(() => {\n        setSubmitted(false);\n        setError(true);\n      });\n  };\n\n  return (\n    <Paper style={{padding: theme.spacing(2), margin: theme.spacing(12), backgroundColor: \"white\"}}>\n    <Typography variant=\"h6\">Get texted as soon Rob makes a trade</Typography>\n    <form style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n      <TextField\n        id=\"phone\"\n        lable=\"Phone number\"\n        variant=\"filled\"\n        value={value}\n        onChange={(e) => setValue(e.value)}\n        placeholder=\"555-555-5555\"\n        helperText=\"By submitting, you agree to data usage terms\"\n        error={error}\n      />\n      <Button\n        variant=\"contained\"\n        onClick={handleSubmit}\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n          marginLeft: theme.spacing(4)\n        }}\n      >\n        Get notified\n      </Button>\n    </form>\n    </Paper>\n  );\n};\n\nconst TradesTable = ({ trades }) => {\n  // Select only the three most recent trades\n  const filteredTrades = trades.filter(trade => {\n    return trade.trade_date\n  })\n  const recentTrades = filteredTrades.slice(0, 3);\n\n  // CTA to sign up on bottom\n  return (\n    <>\n      <Typography align=\"left\" variant=\"h5\">Three most recent trades</Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Ticker</TableCell>\n            <TableCell>Quantity (shares)</TableCell>\n            <TableCell>Price (USD)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {recentTrades.map((trade) => {\n            return (\n              <TableRow>\n                <TableCell>{trade.trade_date.split(\" \")[0]}</TableCell>\n                <TableCell>{trade.ticker}</TableCell>\n                <TableCell>{trade.quantity}</TableCell>\n                <TableCell>${trade.price}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nfunction CreateYourOwnPage() {\n  return (\n    <>\n      <Typography variant=\"h5\" style={{ color: \"white\", padding: theme.spacing(2) }}>\n        Interested in having your own page?\n      </Typography>\n      <Button\n        href=\"https://withlaguna.com\"\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n        }}\n      >\n        Join Laguna\n      </Button>\n    </>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    fetchPortfolio();\n  }, []);\n\n  const [holdings, setHoldings] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [userInfo, setUserInfo] = useState([]);\n\n  const fetchPortfolio = () => {\n    axios.get(\"https://api.withlaguna.com/stonks/holdings\").then((res) => {\n      setHoldings(res.data.holdings);\n    });\n    axios.get(\"https://api.withlaguna.com/stonks/trades\").then((res) => {\n      setTrades(res.data.trades);\n    });\n    axios.get(\"https://api.withlaguna.com/stonks/userinfo\").then((res) => {\n      // setUserInfo(res.data.user);\n\n      // override userinfo\n      setUserInfo({\n        title: \"Rob's stonks\",\n        description: \"Investing with minimal DD in almost pure tech\",\n        link: \"https://robertolsthoorn.com\",\n      });\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n      <div style={{\n          backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n        }}>\n        <Container maxWidth=\"md\">\n          <Hero userInfo={userInfo} />\n          <TradesTable trades={trades} />\n          <SubscribeUpdateForm userInfo={userInfo} />\n          <HoldingsTable holdings={holdings} />\n        </Container>\n        </div>\n        <div style={{backgroundColor: \"black\", padding: theme.spacing(12)}}>\n        <Container>\n        <CreateYourOwnPage />  \n        </Container>\n        </div>\n        </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}