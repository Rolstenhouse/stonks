{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","join","Hero","userInfo","style","padding","spacing","Typography","variant","title","description","Link","href","link","HoldingsTable","holdings","align","Table","size","paddingBottom","TableHead","TableRow","TableCell","TableBody","map","holding","ticker_symbol","includes","num","percentageReturn","institution_value","cost_basis","amountHeld","name","toFixed","SubscribeUpdateForm","useState","submitted","setSubmitted","value","setValue","error","setError","console","log","Paper","margin","backgroundColor","display","justifyContent","alignItems","TextField","id","lable","onChange","e","target","placeholder","helperText","Button","onClick","axios","post","owner_id","phone","then","res","catch","backgroundImage","color","marginLeft","TradesTable","recentTrades","trades","filter","trade","trade_date","slice","split","ticker","quantity","price","CreateYourOwnPage","App","useEffect","fetchPortfolio","setHoldings","setTrades","setUserInfo","sub","window","location","host","get","data","ThemeProvider","className","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187fcdcd.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TextField,\n  Button,\n  Typography,\n  Link,\n  Container,\n  Paper,\n} from \"@material-ui/core\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\n// UTILS\nconst toPercentage = (num) => {\n  return `${(num * 100).toFixed(2)}%`;\n};\n\nconst Hero = ({ userInfo }) => {\n  return (\n    <div style={{ padding: theme.spacing(12) }}>\n      <Typography variant=\"h2\">{userInfo.title}</Typography>\n      <Typography variant=\"\">{userInfo.description}</Typography>\n      <Typography variant=\"\">\n        <Link href={userInfo.link}>{userInfo.link}</Link>\n      </Typography>\n      <Typography variant=\"body2\">\n        Page built using <Link href=\"https://withlaguna.com/\">Laguna</Link>\n      </Typography>\n    </div>\n  );\n};\n\nconst HoldingsTable = ({ holdings }) => {\n  return (\n    <>\n      <Typography align=\"left\" variant=\"h5\">\n        Current holdings\n      </Typography>\n      <Table size=\"small\" style={{ paddingBottom: theme.spacing(4) }}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Ticker</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Amount Held (USD)</TableCell>\n            <TableCell>Total percentage return</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {holdings.map((holding) => {\n            if (holding.ticker_symbol.includes(\"CUR:\")) {\n              return <></>;\n            }\n            // Calculate return\n            const percentageReturn =\n              holding.institution_value / holding.cost_basis - 1;\n            const amountHeld = holding.institution_value;\n            return (\n              <TableRow>\n                <TableCell>{holding.ticker_symbol}</TableCell>\n                <TableCell>{holding.name}</TableCell>\n                <TableCell>${amountHeld.toFixed(2)}</TableCell>\n                <TableCell>{toPercentage(percentageReturn)}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst SubscribeUpdateForm = ({ userInfo }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  console.log('userInfo', userInfo)\n\n  const handleSubmit = (e) => {\n    setError(false);\n    setSubmitted(true);\n    axios\n      .post(\"https://api.withlaguna.com/stonks/submit\", {\n        owner_id: userInfo.id,\n        phone: value,\n      })\n      .then((res) => {\n        setSubmitted(true);\n      })\n      .catch(() => {\n        setSubmitted(false);\n        setError(true);\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        padding: theme.spacing(2),\n        margin: theme.spacing(12),\n        backgroundColor: \"white\",\n      }}\n    >\n      <Typography variant=\"h6\">Get texted as soon Rob makes a trade</Typography>\n      {submitted ? (\n        <Typography>Thanks for subscribing :)</Typography>\n      ) : (\n        <form\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            id=\"phone\"\n            lable=\"Phone number\"\n            variant=\"filled\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            placeholder=\"555-555-5555\"\n            helperText={error ? \"Please enter the right phone number\": \"By submitting, you agree to data usage terms\"}\n            error={error}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={handleSubmit}\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n              marginLeft: theme.spacing(4),\n            }}\n          >\n            Get notified\n          </Button>\n        </form>\n      )}\n    </Paper>\n  );\n};\n\nconst TradesTable = ({ trades }) => {\n  // Select only the three most recent trades\n  const filteredTrades = trades.filter((trade) => {\n    return trade.trade_date;\n  });\n  const recentTrades = filteredTrades.slice(0, 3);\n\n  // CTA to sign up on bottom\n  return (\n    <>\n      <Typography align=\"left\" variant=\"h5\">\n        Three most recent trades\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Ticker</TableCell>\n            <TableCell>Quantity (shares)</TableCell>\n            <TableCell>Price (USD)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {recentTrades.map((trade) => {\n            return (\n              <TableRow>\n                <TableCell>{trade.trade_date.split(\" \")[0]}</TableCell>\n                <TableCell>{trade.ticker}</TableCell>\n                <TableCell>{trade.quantity}</TableCell>\n                <TableCell>${trade.price}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nfunction CreateYourOwnPage() {\n  return (\n    <>\n      <Typography\n        variant=\"h5\"\n        style={{ color: \"white\", padding: theme.spacing(2) }}\n      >\n        Interested in having your own page?\n      </Typography>\n      <Button\n        href=\"https://airtable.com/shr3XDgLgKL6AoCgy\"\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n        }}\n      >\n        Join Laguna\n      </Button>\n    </>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    fetchPortfolio();\n  }, []);\n\n  const [holdings, setHoldings] = useState([]);\n  const [trades, setTrades] = useState([]);\n  const [userInfo, setUserInfo] = useState([]);\n\n  const sub = window.location.host.split('.')[0]\n\n  const fetchPortfolio = () => {\n    axios.get(\"https://api.withlaguna.com/stonks/holdings\").then((res) => {\n      setHoldings(res.data.holdings);\n    });\n    axios.get(\"https://api.withlaguna.com/stonks/trades\").then((res) => {\n      setTrades(res.data.trades);\n    });\n    axios.get(`https://api.withlaguna.com/stonks/userinfo/${sub}`).then((res) => {\n      // setUserInfo(res.data.user);\n      setUserInfo(res.data)\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <div\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n          }}\n        >\n          <Container maxWidth=\"md\">\n            <Hero userInfo={userInfo} />\n            <TradesTable trades={trades} />\n            <SubscribeUpdateForm userInfo={userInfo} />\n            <HoldingsTable holdings={holdings} />\n          </Container>\n        </div>\n        <div style={{ backgroundColor: \"black\", padding: theme.spacing(12) }}>\n          <Container>\n            <CreateYourOwnPage />\n          </Container>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}