{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","fetchPortfolio","useState","holdings","setHoldings","setTrades","axios","get","then","res","data","trades","className","src","logo","alt","href","target","rel","Table","TableHead","TableBody","map","holding","num","percentageReturn","institution_price","cost_basis","amountHeld","institution_value","TableRow","TableCell","ticker_symbol","name","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,MAA0B,iC,iECyE1BA,MA3Df,WACEC,qBAAU,WACRC,MACC,IAHU,MAKmBC,mBAAS,IAL5B,mBAKNC,EALM,KAKIC,EALJ,OAMeF,mBAAS,IANxB,mBAMEG,GANF,WAQPJ,EAAiB,WACrBK,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAC5DL,EAAYK,EAAIC,KAAKP,aAEvBG,IAAMC,IAAI,4CAA4CC,MAAK,SAACC,GAC1DJ,EAAUI,EAAIC,KAAKC,YAQvB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,oBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,wBAOE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGlB,EAASmB,KAAI,SAACC,GAEb,IAvBQC,EAuBFC,GAAoBF,EAAQG,kBAAoBH,EAAQI,YAAYJ,EAAQI,WAC5EC,EAAaL,EAAQM,kBAC3B,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYR,EAAQS,gBACpB,cAACD,EAAA,EAAD,UAAYR,EAAQU,OACpB,cAACF,EAAA,EAAD,UAAYH,EAAWM,QAAQ,KAC/B,cAACH,EAAA,EAAD,WA9BIP,EA8BqBC,EA7BnC,GAAN,QAAe,IAAJD,GAASU,QAAQ,GAA5B,4BCpBWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ea697e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n} from \"@material-ui/core\";\n\nfunction App() {\n  useEffect(() => {\n    fetchPortfolio();\n  }, []);\n\n  const [holdings, setHoldings] = useState([]);\n  const [trades, setTrades] = useState([]);\n\n  const fetchPortfolio = () => {\n    axios.get(\"https://api.withlaguna.com/stonks/holdings\").then((res) => {\n      setHoldings(res.data.holdings);\n    });\n    axios.get(\"https://api.withlaguna.com/stonks/trades\").then((res) => {\n      setTrades(res.data.trades);\n    });\n  };\n\n  const toPercentage = (num) => {\n    return `${(num*100).toFixed(2)}%`;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n          <Table>\n            <TableHead></TableHead>\n            <TableBody>\n              {holdings.map((holding) => {\n                // Calculate return\n                const percentageReturn = (holding.institution_price - holding.cost_basis)/holding.cost_basis;\n                const amountHeld = holding.institution_value;\n                return (\n                  <TableRow>\n                    <TableCell>{holding.ticker_symbol}</TableCell>\n                    <TableCell>{holding.name}</TableCell>\n                    <TableCell>{amountHeld.toFixed(2)}</TableCell>\n                    <TableCell>{toPercentage(percentageReturn)}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}